from flask import Flask, jsonify, requestimport subprocessimport osapp = Flask(__name__)# Funkcja do bezpiecznego uruchamiania poleceñdef run_command(command):    try:        result = subprocess.run(command, capture_output=True, text=True, check=True, security_args=['--no-new-privileges'])        return {"status": "success", "output": result.stdout}    except subprocess.CalledProcessError as e:        return {"status": "error", "output": e.stderr, "returncode": e.returncode}    except FileNotFoundError:        return {"status": "error", "output": "Command not found", "returncode": 127}@app.route('/api/service/<service_name>/<action>', methods=['POST'])def manage_service(service_name, action):    if action not in ["start", "stop", "restart", "status", "enable", "disable"]:        return jsonify({"status": "error", "message": "Nieprawid³owa akcja."}), 400    # Walidacja nazwy us³ugi (dodatkowe zabezpieczenie)    if not service_name.isalnum():        return jsonify({"status": "error", "message": "Nieprawid³owa nazwa us³ugi."}), 400    command = ["systemctl", action, service_name]    return jsonify(run_command(command))@app.route('/api/services', methods=['GET'])def get_services():    command = ["systemctl", "list-units", "--type=service", "--all"]    result = run_command(command)    if result["status"] == "success":        lines = result["output"].splitlines()        services = []        for line in lines[1:]:            parts = line.split(maxsplit=5) # Zwiêkszono do 5, aby obs³u¿yæ d³u¿sze opisy            if len(parts) >= 5:                services.append({"unit": parts[0], "load": parts[1], "active": parts[2], "sub": parts[3], "description": parts[4]})        return jsonify({"status": "success", "services": services})    else:        return jsonify(result), 500@app.route('/api/apt/<action>/<package>', methods=['POST']) # Dodane API dla aptdef manage_package(action, package):    if action not in ["install", "remove", "update"]:        return jsonify({"status": "error", "message": "Nieprawid³owa akcja APT."}), 400    command = ["apt", action, "-y", package]    return jsonify(run_command(command))if __name__ == '__main__':    app.run(debug=True, host='0.0.0.0')